"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertiesTabbedPane = void 0;
const dom_1 = require("../components/dom");
const tabbedPane_1 = require("../components/tabbedPane");
const networkTab_1 = require("./networkTab");
const sourceTab_1 = require("./sourceTab");
class PropertiesTabbedPane {
    constructor(size) {
        this._tabbedPane = new tabbedPane_1.TabbedPane();
        this.element = this._tabbedPane.element;
        this._snapshotTab = new SnapshotTab(size);
        this._sourceTab = new sourceTab_1.SourceTab();
        this._networkTab = new networkTab_1.NetworkTab();
        this._tabbedPane.appendTab(this._snapshotTab);
        this._tabbedPane.appendTab(this._sourceTab);
        this._tabbedPane.appendTab(this._networkTab);
        this._tabbedPane.onSelected(tab => {
            if (tab === this._sourceTab)
                this._sourceTab.resize();
            if (tab)
                tab.setAction(this._actionEntry);
        });
    }
    async setAction(actionEntry) {
        this._actionEntry = actionEntry;
        const selectedTab = this._tabbedPane.selectedTab();
        if (selectedTab)
            selectedTab.setAction(actionEntry);
    }
}
exports.PropertiesTabbedPane = PropertiesTabbedPane;
class SnapshotTab {
    constructor(size) {
        this.label = 'Snapshot';
        this._element = dom_1.dom `
    <hbox>
      <vbox></vbox>
      <vbox style="overflow: auto">
        <div style="width: ${size.width}px; height: ${size.height}px; display: block; background: white">
          <iframe id=snapshot name=snapshot style="width: 100%; height: 100%; border: none"></iframe>
        </div>
      <vbox>
      <vbox></vbox>
    </hbox>
    `;
    }
    async setAction(actionEntry) {
        if (!actionEntry) {
            this._element.$('iframe').src = 'about:blank';
            return;
        }
        await window.renderSnapshot(actionEntry.action);
    }
    content() {
        return this._element;
    }
}
//# sourceMappingURL=propertiesTabbedPane.js.map